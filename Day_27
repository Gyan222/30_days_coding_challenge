Given an array arr[] that contains positive and negative integers (may contain 0 as well). Find the maximum product that we can get in a subarray of arr[].
Note: It is guaranteed that the output fits in a 32-bit integer.

solution::

def maxProductSubarray(arr):
    if not arr:
        return 0
    
    
    max_product = arr[0]
    curr_max = arr[0]
    curr_min = arr[0]
    
    for i in range(1, len(arr)):
        if arr[i] < 0:
            curr_max, curr_min = curr_min, curr_max
        
        
        curr_max = max(arr[i], curr_max * arr[i])
        curr_min = min(arr[i], curr_min * arr[i])
        
        max_product = max(max_product, curr_max)
    
    return max_product
