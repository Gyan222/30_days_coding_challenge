Given an array of integers arr[] representing a permutation, implement the next permutation that rearranges the numbers into the lexicographically next greater permutation. If no such permutation exists, rearrange the numbers into the lowest possible order (i.e., sorted in ascending order). 

Note - A permutation of an array of integers refers to a specific arrangement of its elements in a sequence or linear order.

def nextPermutation(self, arr):
        n = len(arr)
        if n <= 1:
            return arr
        
        # Step 1: Find the largest index i such that arr[i] < arr[i + 1].
        i = n - 2
        while i >= 0 and arr[i] >= arr[i + 1]:
            i -= 1
        
        if i >= 0:  # If such an index exists
            # Step 2: Find the largest index j > i such that arr[j] > arr[i].
            j = n - 1
            while arr[j] <= arr[i]:
                j -= 1
            
            # Step 3: Swap arr[i] and arr[j].
            arr[i], arr[j] = arr[j], arr[i]
        
        # Step 4: Reverse the subarray arr[i+1:].
        self.reverse(arr, i + 1, n - 1)
        return arr
    
    def reverse(self, arr, start, end):
        while start < end:
            arr[start], arr[end] = arr[end], arr[start]
            start += 1
            end -= 1
