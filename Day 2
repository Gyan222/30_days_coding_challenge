Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively (Dutch National Flag Algorithm).

solution:

class Solution(object):
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        n=len(nums)
        low = 0
        mid=0
        high = n-1

        '''
        0 to low-1 = extreme left
        low to mid-1 = normal
        mid to high = unsorted array
        high+1 to n-1 = extreme right  '''

        while (mid<=high):
            if nums[mid] == 0:
                temp = nums[low]
                nums[low] = nums[mid]
                nums[mid] = temp
                low += 1 
                mid += 1
                
            elif nums[mid]==1:
                mid += 1

            else:
                temp = nums[mid]
                nums[mid] = nums[high]
                nums[high] = temp

                high = high-1
